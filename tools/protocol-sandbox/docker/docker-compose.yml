version: "3.9"
x-services: &env
  env_file:
    - .env

services:
  # -------------------- Node Services --------------------
  validator-a:
    container_name: validator-a
    image: quantiksolutions/near-core:latest
    volumes:
      - ../configs/validator_a:/srv/near
    networks:
      back-tier:
        ipv4_address: 172.20.0.2
    ports:
      - "3030:3030"
      - "24567:24567"

  validator-b:
    container_name: validator-b
    image: quantiksolutions/near-core:latest
    volumes:
      - ../configs/validator_b:/srv/near
    networks:
      back-tier:
        ipv4_address: 172.20.0.3
    ports:
      - "3031:3030"
      - "24568:24567"

  validator-c:
    container_name: validator-c
    image: quantiksolutions/near-core:latest   
    volumes:
      - ../configs/validator_c:/srv/near
    networks:
      back-tier:
        ipv4_address: 172.20.0.4
    ports:
      - "3032:3030"
      - "24569:24567"
      

  validator-d:
    container_name: validator-d
    image: quantiksolutions/near-core:latest
    volumes:
      - ../configs/validator_d:/srv/near
    networks:
      back-tier:
        ipv4_address: 172.20.0.5
    ports:
      - "3033:3030"
      - "24570:24567"

  indexer-for-explorer:
    container_name: indexer-for-explorer
#    image: near-indexer-for-explorer:latest
    build:
      context: ../services/near-indexer-for-explorer/
      dockerfile: ./Dockerfile
      cache_from:
        - quantiksolutions/near-indexer-for-explorer:latest
    environment:
      - DATABASE_URL=postgres://explorer:explorer@172.20.0.7/explorer
    volumes:
      - ../configs/archive:/srv/near
    networks:
      back-tier:
        ipv4_address: 172.20.0.6
    ports:
      - "3034:3030"
      - "24571:24567"
    depends_on:
      - validator-a
      - validator-b
      - validator-c
      - validator-d
      - db
  # ---------------------------------------------------------
  # -------------------- Helper Services --------------------
  db:
    container_name: db
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=helper
      - POSTGRES_PASSWORD=helper
      - POSTGRES_DB=accounts_development
      - CONTRACT_HELPER_DB_USER=contract_helper
      - CONTRACT_HELPER_DB_PASS=contract_helper
      - CONTRACT_HELPER_DB_NAME=contract_helper
      - EXPLORER_DB_USER=explorer
      - EXPLORER_DB_PASS=explorer
      - EXPLORER_DB_NAME=explorer
      - ANALYTICS_DB_USER=analytics
      - ANALYTICS_DB_PASS=analytics
      - ANALYTICS_DB_NAME=analytics
      - TELEMETRY_DB_USER=telemetry
      - TELEMETRY_DB_PASS=telemetry
      - TELEMETRY_DB_NAME=telemetry
    ports:
      - '5432:5432'
    volumes:
      - ../services/postgres-db:/docker-entrypoint-initdb.d/
      - ../services/postgres-db/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "helper" ]
      timeout: 45s
      interval: 10s
      retries: 10
    networks:
      back-tier:
        ipv4_address: 172.20.0.7

  protocol-analytics:
#    image: postgres:14.1-alpine
    build:
      context: ../services/near-analytics/
      dockerfile: ./Dockerfile
#      cache_from:
#        - nearcore_local_contract_helper:latest
    restart: always
    environment:
      - ANALYTICS_DATABASE_URL=postgres://analytics:analytics@172.20.0.7/analytics
      - INDEXER_DATABASE_URL=postgres://explorer:explorer@172.20.0.7/explorer
    depends_on:
      - db

  contract-helper:
    container_name: contract-helper
    image: nearcore_local_contract_helper:latest
    build:
      context: ../services/contract-helper/
      dockerfile: ./Dockerfile
      cache_from:
        - nearcore_local_contract_helper:latest
    <<: *env
    depends_on:
      - db
      - validator-a
      - validator-b
      - validator-c
      - validator-d
      - indexer-for-explorer
    networks:
      back-tier:
        ipv4_address: 172.20.0.8
    ports:
      - "3020:3000"
    command: yarn start


  wamp:
    <<: *env
    container_name: near-explorer-wamp
    build:
      context: ../services/near-explorer/wamp
      dockerfile: ./Dockerfile
#      cache_from:
#        - nearcore_local_contract_helper:latest
    restart: always
    environment:
      - NEAR_EXPLORER_WAMP_BACKEND_SECRET=THIS_IS_LOCALHOST_SECRET
    ports:
      - "10000:8080"
    depends_on:
      - db
    networks:
      back-tier:
        ipv4_address: 172.20.0.9


  backend:
    <<: *env
    container_name: near-explorer-backend
    build:
      context: ../services/near-explorer
      dockerfile: backend/Dockerfile
    restart: always
    depends_on:
      - wamp
      - db
    environment:
      - NEAR_EXPLORER_WAMP_PORT=8080
      - NEAR_EXPLORER_WAMP_HOST=wamp
      - NEAR_EXPLORER_WAMP_BACKEND_SECRET=THIS_IS_LOCALHOST_SECRET
    mem_limit: 1G
    # command: 
    #   -  npm run start
    entrypoint: ["npm", "run", "start"]
    networks:
      back-tier:
        ipv4_address: 172.20.0.10 

  frontend:
    <<: *env
    container_name: near-explorer-frontend
    build:
      context: ../services/near-explorer
      dockerfile: frontend/Dockerfile
    restart: always
    depends_on:
      - wamp
    environment:
      - PORT=3000
      - NEAR_EXPLORER_WAMP_HOST=localhost
      - NEAR_EXPLORER_WAMP_SSR_HOST=wamp
      - NEAR_EXPLORER_WAMP_SSR_PORT=8080
      - NEAR_EXPLORER_WAMP_BACKEND_SECRET=THIS_IS_LOCALHOST_SECRET
    ports:
      - "3000:3000"
    command: [ "npm", "run", "start" ]
    networks:
      back-tier:
        ipv4_address: 172.20.0.11

  near-wallet:
    image: nearcore_local_wallet:latest
    build:
      context: ../services/near-wallet/
      dockerfile: ./Dockerfile
      cache_from:
        - nearcore_local_wallet:latest
    networks:
      back-tier:
        ipv4_address: 172.20.0.12
    ports:
      - "3004:3004"
    depends_on:
      - contract-helper

networks:
  back-tier:
    ipam:
      config:
        - subnet: 172.20.0.0/24

